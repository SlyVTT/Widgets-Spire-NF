#include "ToolkitNF/GUIToolkitNF.hpp"

int main( void )
{
    WidgetApplication::Initialize();
    DesktopWidget *MyDesktop = new DesktopWidget( "Main Desktop", 0,0, SCREEN_WIDTH_GUI, SCREEN_HEIGHT_GUI, nullptr );


    MenuBarWidget *MenuBarTop = new MenuBarWidget( "Main Menu Bar",1,1,1,1,MyDesktop );
    MenuItemWidget *FileMenuTop = new MenuItemWidget( "File",1,1,1,1,MenuBarTop );
        MenuPaneWidget *FileMenuPane = new MenuPaneWidget( "FilePaneMenu",1,1,1,1, FileMenuTop );
            MenuItemWidget *Open = new MenuItemWidget( "Open ...",1,1,1,1,FileMenuPane );
            MenuItemWidget *SaveAs = new MenuItemWidget( "Save As ...",1,1,1,1,FileMenuPane );
            MenuItemWidget *Save = new MenuItemWidget( "Save ...",1,1,1,1,FileMenuPane );
            SpacerWidget *SpaceMenuFile = new SpacerWidget( "",1,1,1,1,FileMenuPane );
            MenuItemWidget *Exit = new MenuItemWidget( "Exit ...",1,1,1,1,FileMenuPane );

    MenuItemWidget *EditMenuTop = new MenuItemWidget( "Edit",1,1,1,1,MenuBarTop );
        MenuPaneWidget *EditMenuPane = new MenuPaneWidget( "EditPaneMenu",1,1,1,1, EditMenuTop );
            MenuItemWidget *Copy = new MenuItemWidget( "Copy",1,1,1,1,EditMenuPane );
            MenuItemWidget *Cut = new MenuItemWidget( "Cut",1,1,1,1,EditMenuPane );
            MenuItemWidget *Paste = new MenuItemWidget( "Paste",1,1,1,1,EditMenuPane );
            MenuItemWidget *Delete = new MenuItemWidget( "Delete",1,1,1,1,EditMenuPane );

    MenuItemWidget *ViewMenuTop = new MenuItemWidget( "View",1,1,1,1,MenuBarTop );
        MenuPaneWidget *ViewMenuPane = new MenuPaneWidget( "ViewPaneMenu",1,1,1,1, ViewMenuTop );
            MenuItemWidget *ZoomIn = new MenuItemWidget( "Zoom In",1,1,1,1,ViewMenuPane );
            MenuItemWidget *ZoomOut = new MenuItemWidget( "Zoom Out",1,1,1,1,ViewMenuPane );
            MenuItemWidget *ZoomValue = new MenuItemWidget( "Zoom at ...",1,1,1,1,ViewMenuPane );
                MenuPaneWidget *ZoomValueMenuPane = new MenuPaneWidget( "ViewPaneMenu",1,1,1,1, ZoomValue );
                    MenuItemWidget *Zoom010 = new MenuItemWidget( "10%",1,1,1,1,ZoomValueMenuPane );
                    MenuItemWidget *Zoom025 = new MenuItemWidget( "25%",1,1,1,1,ZoomValueMenuPane );
                    MenuItemWidget *Zoom050 = new MenuItemWidget( "50%",1,1,1,1,ZoomValueMenuPane );
                    MenuItemWidget *Zoom075 = new MenuItemWidget( "75%",1,1,1,1,ZoomValueMenuPane );
                    MenuItemWidget *Zoom100 = new MenuItemWidget( "100%",1,1,1,1,ZoomValueMenuPane );
                    MenuItemWidget *ZoomOther = new MenuItemWidget( "Other ...",1,1,1,1,ZoomValueMenuPane );
                        MenuPaneWidget *ZoomValueOtherMenuPane = new MenuPaneWidget( "ViewPaneMenu",1,1,1,1, ZoomOther );
                            MenuItemWidget *Zoom010A = new MenuItemWidget( "10%",1,1,1,1,ZoomValueOtherMenuPane );
                            MenuItemWidget *Zoom025A = new MenuItemWidget( "25%",1,1,1,1,ZoomValueOtherMenuPane );
                            MenuItemWidget *Zoom050A = new MenuItemWidget( "50%",1,1,1,1,ZoomValueOtherMenuPane );
                            MenuItemWidget *Zoom075A = new MenuItemWidget( "75%",1,1,1,1,ZoomValueOtherMenuPane );
                            MenuItemWidget *Zoom100A = new MenuItemWidget( "100%",1,1,1,1,ZoomValueOtherMenuPane );
                            MenuItemWidget *ZoomOtherA = new MenuItemWidget( "Other ...",1,1,1,1,ZoomValueOtherMenuPane );
            MenuItemWidget *ZoomFit = new MenuItemWidget( "Zoom Fit",1,1,1,1,ViewMenuPane );



    WindowWidget *MyWindow = new WindowWidget( "I am the Main Window", 40, 240, 200, 100, MyDesktop );
    ContainerVWidget *VerticalContainer = new ContainerVWidget( " ", 1,1,1,1, MyWindow );
    LabelWidget *MyLabel = new LabelWidget( "Hello World !!!", 1,1,1,1, VerticalContainer );
    MyLabel->SetAlignment( LabelWidget::Centered );
    ButtonWidget *MyButton = new ButtonWidget( "Quit !!!", 1,1,1,1, VerticalContainer );
    MyWindow->Adjust();


    WindowWidget *MyWindow2 = new WindowWidget( "I am another Window", 100, 300, 200, 100, MyDesktop );
    ContainerVWidget *VerticalContainer2 = new ContainerVWidget( " ", 1,1,1,1, MyWindow2 );
    LabelWidget *MyLabel2 = new LabelWidget( "Second Example of using GUI Toolkit NF", 1,1,1,1, VerticalContainer2 );
    MyLabel2->SetAlignment( LabelWidget::Centered );
    ContainerHWidget *HorizontalContainer = new ContainerHWidget( " ", 1,1,1,1, VerticalContainer2 );
    SpacerWidget *LeftSpacer = new SpacerWidget( " ", 1,1,1,1, HorizontalContainer );
    ButtonWidget *MyButtonCentered = new ButtonWidget( "Test", 1,1,1,1, HorizontalContainer );
    SpacerWidget *RightSpacer = new SpacerWidget( " ", 1,1,1,1, HorizontalContainer );
    MyWindow2->Adjust();

/*
    ContainerHWidget *MainContainer = new ContainerHWidget("",1,1,1,1,MyDesktop);
    ButtonWidget *Test1 = new ButtonWidget("Left",1,1,1,1,MainContainer);
    MainContainer->AddConstraint(80,"%");
    ButtonWidget *Test2 = new ButtonWidget("Right",1,1,1,1,MainContainer);
    MainContainer->AddConstraint(20,"%");
*/

    WindowWidget *MyWindow3 = new WindowWidget( "Graphic Context Test", 50, 300, 200, 100, MyDesktop );
    ContainerVWidget *VerticalContainer3 = new ContainerVWidget( " ", 1,1,1,1, MyWindow3 );

    ContainerHWidget *HorizontalContainer2 = new ContainerHWidget( " ", 1,1,1,1, VerticalContainer3 );
    VerticalContainer3->AddConstraint(20,"px");
    LabelWidget *XMouseLabel = new LabelWidget( "X mouse ", 1,1,1,1, HorizontalContainer2 );
    XMouseLabel->SetAlignment( LabelWidget::Centered );
    LabelWidget *YMouseLabel = new LabelWidget( "Y mouse ", 1,1,1,1, HorizontalContainer2 );
    YMouseLabel->SetAlignment( LabelWidget::Centered );

    GraphicContextWidget *GcTest = new GraphicContextWidget( "Test GC Coordinates", 1,1,1,1,VerticalContainer3 );
    VerticalContainer3->AddConstraint(100,"%");

    SDL_Surface *myImageTest = GcTest->CreateEmptyImageColor(200,200,0,0,0,255);
    pixelRGBA( myImageTest, 50, 50, 255, 0, 0, 255 );
    pixelRGBA( myImageTest, 100, 50, 255, 255, 0, 255 );
    pixelRGBA( myImageTest, 150, 50, 255, 255, 255, 255 );
    pixelRGBA( myImageTest, 50, 100, 0, 255, 0, 255 );
    pixelRGBA( myImageTest, 100, 100, 0, 255, 255, 255 );
    pixelRGBA( myImageTest, 150, 100, 255, 255, 255, 255 );
    pixelRGBA( myImageTest, 50, 150, 255, 0, 0, 255 );
    pixelRGBA( myImageTest, 100, 150, 255, 255, 0, 255 );
    pixelRGBA( myImageTest, 150, 150, 255, 255, 255, 255 );
    SDL_Flip( myImageTest );
    GcTest->AssignSurface( myImageTest );
    GcTest->SetUserZoomLevel(1.0f);



    ContainerHWidget *HorizontalContainer3 = new ContainerHWidget( " ", 1,1,1,1, VerticalContainer3 );
    VerticalContainer3->AddConstraint(20,"px");
    SpacerWidget *LeftSpacer2 = new SpacerWidget( " ", 1,1,1,1, HorizontalContainer3 );
    ButtonWidget *MyButtonCentered2 = new ButtonWidget( "Test", 1,1,1,1, HorizontalContainer3 );
    SpacerWidget *RightSpacer2 = new SpacerWidget( " ", 1,1,1,1, HorizontalContainer3 );
    MyWindow3->Adjust();



    WindowWidget *window = new WindowWidget(  "Simple Text Editor for TI nSpire v1.0", 40, 40, 260, 180, MyDesktop );
    ContainerVWidget *containervert = new ContainerVWidget( "Main container", 1,1,1,1, window );
    MultiLineRichTextBoxWidget *multiline = new MultiLineRichTextBoxWidget( "The Editor Text Box", 1,1,1,1, containervert );
    multiline->LoadContentFromFile( "/documents/Widget/Texts/manual.hlp.tns" );
    //multiline->SetNonEditable();

    //MultiLineTextBoxWidget *multiline2 = new MultiLineTextBoxWidget( "The Editor Text Box", 1,1,1,1, containervert );
    //multiline2->LoadContentFromFile(  "/documents/Widget/Texts/longtext.txt.tns" );
    //multiline2->SetNonEditable();
    window->Adjust();

    WindowWidget *window1 = new WindowWidget(  "GUI Toolkit for nSpire rev 0.75 Demo", 45, 35, 240, 190, MyDesktop );
    window1->SetMinimalDimensions( 90, 75 );
    MenuBarWidget *barwin1 = new MenuBarWidget(  "Main Menu",1,1,1,1, window1 );
    MenuItemWidget *mainmenufile1 = new MenuItemWidget(  "File", 1,1,1,1, barwin1 );
    MenuItemWidget *mainmenuedit1 = new MenuItemWidget(  "Edit", 1,1,1,1, barwin1 );
    MenuItemWidget *mainmenuView1 = new MenuItemWidget(  "View", 1,1,1,1, barwin1 );
    MenuItemWidget *mainmenuSearch1 = new MenuItemWidget(  "Search", 1,1,1,1, barwin1 );
    MenuPaneWidget *paneFile1 = new MenuPaneWidget(  "File", 1,1,1,1, mainmenufile1 );
    MenuItemWidget *FileOpen1 = new MenuItemWidget(  "Open ...", 1,1,1,1, paneFile1 );
    MenuItemWidget *FileSave1 = new MenuItemWidget(  "Save", 1,1,1,1, paneFile1 );
    MenuItemWidget *FileSaveAs1 = new MenuItemWidget(  "Save As ...", 1,1,1,1, paneFile1 );
    MenuItemWidget *FilePrint1 = new MenuItemWidget(  "Print ...", 1,1,1,1, paneFile1 );
    MenuItemWidget *FileClose1 = new MenuItemWidget(  "Close", 1,1,1,1, paneFile1 );
    MenuPaneWidget *paneEdit1 = new MenuPaneWidget(  "Edit", 1,1,1,1, mainmenuedit1 );
    MenuItemWidget *EditUndo1 = new MenuItemWidget(  "Undo", 1,1,1,1, paneEdit1 );
    MenuItemWidget *EditRedo1 = new MenuItemWidget(  "Redo", 1,1,1,1, paneEdit1 );
    MenuItemWidget *EditCopy1 = new MenuItemWidget(  "Copy", 1,1,1,1, paneEdit1 );
    MenuItemWidget *EditCut1 = new MenuItemWidget(  "Cut", 1,1,1,1, paneEdit1 );
    MenuItemWidget *EditPaste1 = new MenuItemWidget(  "Paste", 1,1,1,1, paneEdit1 );
    MenuPaneWidget *paneView1 = new MenuPaneWidget(  "View", 1,1,1,1, mainmenuView1 );
    MenuItemWidget *ViewZoomPlus1 = new MenuItemWidget(  "Zoom +", 1,1,1,1, paneView1 );
    MenuItemWidget *ViewZoomMinus1 = new MenuItemWidget(  "Zoom -", 1,1,1,1, paneView1 );
    MenuItemWidget *ViewZoomSelect1 = new MenuItemWidget(  "Select", 1,1,1,1, paneView1 );
    MenuItemWidget *ViewZoomFit1 = new MenuItemWidget(  "Fit All", 1,1,1,1, paneView1 );
    MenuItemWidget *ViewZomeMax1 = new MenuItemWidget(  "Zoom Max", 1,1,1,1, paneView1 );
    MenuItemWidget *ViewZomeMin1 = new MenuItemWidget(  "Zoom Min", 1,1,1,1, paneView1 );
    MenuPaneWidget *paneZoomSelect1 = new MenuPaneWidget(  "Zoom Select", 1,1,1,1, ViewZoomSelect1 );
    MenuItemWidget *ViewZoomSelect101 = new MenuItemWidget(  "10%", 1,1,1,1, paneZoomSelect1 );
    MenuItemWidget *ViewZoomSelect251 = new MenuItemWidget(  "25%", 1,1,1,1, paneZoomSelect1 );
    MenuItemWidget *ViewZoomSelect501 = new MenuItemWidget(  "50%", 1,1,1,1, paneZoomSelect1 );
    MenuItemWidget *ViewZoomSelect751 = new MenuItemWidget(  "75%", 1,1,1,1, paneZoomSelect1 );
    MenuItemWidget *ViewZoomSelect1001 = new MenuItemWidget(  "100%", 1,1,1,1, paneZoomSelect1 );
    MenuItemWidget *ViewZoomSelect1501 = new MenuItemWidget(  "150%", 1,1,1,1, paneZoomSelect1 );
    MenuPaneWidget *paneSearch1 = new MenuPaneWidget(  "Search", 1,1,1,1, mainmenuSearch1 );
    MenuItemWidget *SearchFindHere1 = new MenuItemWidget(  "Find Here ...", 1,1,1,1, paneSearch1 );
    MenuItemWidget *SearchFindAll1 = new MenuItemWidget(  "Find All Files ...", 1,1,1,1, paneSearch1 );
    MenuItemWidget *SearchReplace1 = new MenuItemWidget(  "Replace ...", 1,1,1,1, paneSearch1 );

    IconBarWidget *baricon1 = new IconBarWidget(  "M", 1,1,1,1, window1 );
    IconItemWidget *iconfile1 = new IconItemWidget(  "F", 1,1,1,1, baricon1 );
    iconfile1->AssignIconEnable(  "/documents/Widget/Icons/Folder.bmp.tns" );
    iconfile1->AssignIconDisable(  "/documents/Widget/Icons/gr_Folder.bmp.tns" );
    IconItemWidget *iconedit1 = new IconItemWidget(  "E", 1,1,1,1, baricon1 );
    iconedit1->AssignIconEnable(  "/documents/Widget/Icons/Copy.bmp.tns" );
    iconedit1->AssignIconDisable(  "/documents/Widget/Icons/gr_Copy.bmp.tns" );
    IconItemWidget *iconview1 = new IconItemWidget(  "V", 1,1,1,1, baricon1 );
    iconview1->AssignIconEnable(  "/documents/Widget/Icons/Pie chart.bmp.tns" );
    iconview1->AssignIconDisable(  "/documents/Widget/Icons/gr_Pie chart.bmp.tns" );
    IconItemWidget *iconsearch1 = new IconItemWidget(  "S", 1,1,1,1, baricon1 );
    iconsearch1->AssignIconEnable(  "/documents/Widget/Icons/Save.bmp.tns" );
    iconsearch1->AssignIconDisable(  "/documents/Widget/Icons/gr_Save.bmp.tns" );
    IconItemWidget *iconproject1 = new IconItemWidget(  "P", 1,1,1,1, baricon1 );
    iconproject1->AssignIconEnable(  "/documents/Widget/Icons/Schedule.bmp.tns" );
    iconproject1->AssignIconDisable(  "/documents/Widget/Icons/gr_Schedule.bmp.tns" );

    ContainerVWidget *containervert1 = new ContainerVWidget( "container", 1, 1, 1, 1, window1 );

    LabelWidget *label1 = new LabelWidget( "Please pick a theme for the Toolkit : ", 1, 1, 1, 1, containervert1 );
    label1->SetAlignment( LabelWidget::Left );
    DropBoxWidget *mydropbox = new DropBoxWidget( "Test Drop", 1, 1, 1, 1, containervert1 );
    LabelWidget *label2 = new LabelWidget(  "This is an InputBox", 1, 1, 1, 1, containervert1 );
    label2->SetAlignment( LabelWidget::Left );
    InputWidget *input = new InputWidget( "I am an Inputbox", 1, 1, 1, 1, containervert1 );
    input->SetContent( (char *) "Please enter something here !!!" );
    LabelWidget *label3 = new LabelWidget( "Some Radio/Checkbox examples", 1, 1, 1, 1, containervert1 );
    label3->SetAlignment( LabelWidget::Left );
    CheckBoxWidget *check = new CheckBoxWidget(  "I am a CheckBox", 1, 1, 1, 1, containervert1 );
    RadioControlWidget *radio = new RadioControlWidget( "I am a RadioControl", 1, 1, 1, 1, containervert1 );
    //    LabelWidget *label4 = new LabelWidget(  "ProgressBars (use + and - keys)", 1, 1, 1, 1, containervert1 );
    //    label4->setalignment( left );
    //    ContainerHWidget *contH5 = new ContainerHWidget(  "container", 1, 1, 1, 1, containervert1 );
    //    ProgressBarWidget *bar = new ProgressBarWidget(  "ProgressBar", 1, 1, 1, 1, contH5 );
    //    bar->setstyle( Continuous );
    //    bar->setprintvalue( true );
    //    ProgressBarWidget *bars = new ProgressBarWidget(  "ProgressBar", 1, 1, 1, 1, contH5 );
    //    bars->setstyle( Bricks );
    //    bars->setnumberbricks( 10 );
    //    bars->setprintvalue( true );
    ContainerHWidget *containerH = new ContainerHWidget( "containerH", 1, 1, 1, 1, containervert1 );
    SpacerWidget *spacer1H = new SpacerWidget( "Spacer1", 1, 1, 1, 1, containerH );
    ButtonWidget *buttonQuit = new ButtonWidget( "Quit !!", 1, 1, 1, 1, containerH );
    SpacerWidget *spacer2H = new SpacerWidget( "Spacer2", 1, 1, 1, 1, containerH );
    // We fill the list of the dropbox with items to be selectable by the user
    mydropbox->AddItem(  "Default GUI Toolkit Theme" );
    mydropbox->AddItem(  "Bright GUI Toolkit Theme" );
    mydropbox->AddItem(  "Dark GUI Toolkit Theme" );
    mydropbox->AddItem(  "Hyrule GUI Toolkit Theme" );
    // We ask for an automatic positioning of the widgets in the grid
    // Note : this will fully override the dimensions given to the Widgets manually

    window1->Adjust();


    IconBarWidget *baricon = new IconBarWidget(  "I am the main Bar Icon", 1,1,1,1, MyDesktop );
    IconItemWidget *iconNew = new IconItemWidget(  "N", 1,1,1,1, baricon );
    iconNew->AssignIconEnable(  "/documents/Widget/Icons/New document.bmp.tns" );
    iconNew->AssignIconDisable(  "/documents/Widget/Icons/gr_New document.bmp.tns" );

    SpacerWidget *spacer2 = new SpacerWidget(" ", 1,1,1,1, baricon );

    IconItemWidget *iconCopy = new IconItemWidget(  "C", 1,1,1,1, baricon );
    iconCopy->AssignIconEnable(  "/documents/Widget/Icons/Copy.bmp.tns" );
    iconCopy->AssignIconDisable(  "/documents/Widget/Icons/gr_Copy.bmp.tns" );
    IconItemWidget *iconCut = new IconItemWidget(  "X", 1,1,1,1, baricon );
    iconCut->AssignIconEnable(  "/documents/Widget/Icons/Cut.bmp.tns" );
    iconCut->AssignIconDisable(  "/documents/Widget/Icons/gr_Cut.bmp.tns" );
    IconItemWidget *iconPaste = new IconItemWidget(  "P", 1,1,1,1, baricon );
    iconPaste->AssignIconEnable(  "/documents/Widget/Icons/Paste.bmp.tns" );
    iconPaste->AssignIconDisable(  "/documents/Widget/Icons/gr_Paste.bmp.tns" );
    IconItemWidget *iconErase = new IconItemWidget(  "E", 1,1,1,1, baricon );
    iconErase->AssignIconEnable(  "/documents/Widget/Icons/Erase.bmp.tns" );
    iconErase->AssignIconDisable(  "/documents/Widget/Icons/gr_Erase.bmp.tns" );


    MyDesktop->Adjust();

    WidgetApplication::AddChild( MyDesktop );
    WidgetApplication::PrepareForRun();

    char XTexte[25];
    char YTexte[25];

    while (!WidgetApplication::AskForClosure() && !MyButton->IsPressed() && !Exit->IsPressed())
    {
        WidgetApplication::Run( WidgetApplication::ForcedRender );

        sprintf( XTexte, "%d", GcTest->GetXMouseInContext() );
        sprintf( YTexte, "%d", GcTest->GetYMouseInContext() );

        XMouseLabel->SetLabel( XTexte );
        YMouseLabel->SetLabel( YTexte );

    }

    SDL_FreeSurface( myImageTest );

    WidgetApplication::Close();

    return 0;
}
